import pytest
from pytamil.தமிழ் import எழுத்து
from pytamil.தமிழ் import ஆசிரியப்பா



@pytest.mark.parametrize("பத்தி", \
    [ 
        #குறுந்தொகை - 3. குறிஞ்சி - தலைவி கூற்று
        ('''நிலத்தினும் பெரிதே வானினும் உயர்ந்தன்று
            = கருவிளம் புளிமா கூவிளம் புளிமாங்காய்
            நீரினும் ஆரள வின்றே சாரல்
            = கூவிளம் கூவிளம் தேமா தேமா
            கருங்கோல் குறிஞ்சிப் பூக்கொண்டு
            = புளிமா புளிமா தேமாங்காய்
            பெருந்தேன் இழைக்கும் நாடனொடு நட்பே
            = புளிமா புளிமா கூவிளங்காய் தேமா'''),

        ('''தானே முத்தி தருகுவன் சிவனவன்
            = தேமா தேமா கருவிளம் கருவிளம்
            அடியன் வாத வூரனைக்
            = புளிமா தேமா கூவிளம்
            கடிவில் மனத்தால் கட்டவல் லார்க்கே
            = புளிமா புளிமா கூவிளம் தேமா'''),

        ('''அருள்வீற் றிருந்த திருநிழற் போதி
            = புளிமா புளிமா கருவிளம் தேமா
            முழுதுணர் முனிவநிற் பரவுதும் தொழுதக
            = கருவிளம் கருவிளம் கருவிளம் கருவிளம்
            ஒருமனம் எய்தி இருவினைப் பிணிவிட்டு
            = கருவிளம் தேமா கருவிளம் புளிமாங்காய்
            முப்பகை கடந்து நால்வகைப் பொருளுணர்ந்
            = கூவிளம் புளிமா கூவிளம் கருவிளம்
            தோங்குநீர் உலகிடை யாவரும்
            = கூவிளம் கருவிளம் கூவிளம்
            நீங்கா இன்பமொடு நீடுவாழ் கெனவே
            = தேமா கூவிளங்காய் கூவிளம் புளிமா'''),


    ])
def test_நேரிசை_ஆசிரியப்பா(பத்தி):   
    
    # extract செய்யுள் lines only
    பாடல்_அடிகள் =  [ அடி.strip() for i,அடி in enumerate(பத்தி.strip().splitlines()) if not i%2 ]
    பாடல் =  "\n".join(பாடல்_அடிகள்)

    # extract சீர் வாய்பாடு lines only
    சீர்_அடிகள் =  [ அடி.strip() for i,அடி in enumerate(பத்தி.strip().splitlines()) if i%2 ]

    அடிவரிசை = ஆசிரியப்பா.சீர்_வாய்ப்பாடு_கொடு(பாடல்)
    புது_சீர்_அடிகள் = ["= "+" ".join(அடி) for அடி in அடிவரிசை]

    assert சீர்_அடிகள் == புது_சீர்_அடிகள்
    
    
	


@pytest.mark.parametrize("பத்தி", \
    [ 
        ('''நீரின் தண்மையும் தீயின் வெம்மையும்
            = தேமா கூவிளம் தேமா கூவிளம் 
            சாரச் சார்ந்து
            = தேமா தேமா
            தீரத் தீரும்
            = தேமா தேமா
            சாரல் நாடன் கேண்மை
            = தேமா தேமா தேமா 
            சாரச் சாரச் சார்ந்து
            = தேமா தேமா தேமா 
            தீரத் தீரத் தீர்பொல் லாதே
            = தேமா தேமா தேமா தேமா'''),
    ])
def test_இணைக்குறள்_ஆசிரியப்பா(பத்தி):   
    
    # extract செய்யுள் lines only
    பாடல்_அடிகள் =  [ அடி.strip() for i,அடி in enumerate(பத்தி.strip().splitlines()) if not i%2 ]
    பாடல் =  "\n".join(பாடல்_அடிகள்)

    # extract சீர் வாய்பாடு lines only
    சீர்_அடிகள் =  [ அடி.strip() for i,அடி in enumerate(பத்தி.strip().splitlines()) if i%2 ]

    அடிவரிசை = ஆசிரியப்பா.சீர்_வாய்ப்பாடு_கொடு(பாடல்)
    புது_சீர்_அடிகள் = ["= "+" ".join(அடி) for அடி in அடிவரிசை]

    assert சீர்_அடிகள் == புது_சீர்_அடிகள்


@pytest.mark.parametrize("பத்தி", \
    [ 
        ('''வேரல் வேலி வேர்க்கோட் பலவின்
            = தேமா தேமா தேமா புளிமா
            சாரல் நாட செவ்வியை யாகுமதி
            = தேமா தேமா கூவிளம் கூவிளங்காய்
            யாரஃ தறிந்திசி னோரே சாரற்
            = தேமா கருவிளம் தேமா தேமா
            சிறுகோட்டுப் பெரும்பழம் தூங்கி யாங்கிவள்
            = புளிமாங்காய் கருவிளம் தேமா கூவிளம்
            உயிர்தவச் சிறிது காமமோ பெரிதே
            = கருவிளம் புளிமா கூவிளம் புளிமா'''),
    ])
def test_நிலை_மண்டில_ஆசிரியப்பா(பத்தி):   
    
    # extract செய்யுள் lines only
    பாடல்_அடிகள் =  [ அடி.strip() for i,அடி in enumerate(பத்தி.strip().splitlines()) if not i%2 ]
    பாடல் =  "\n".join(பாடல்_அடிகள்)

    # extract சீர் வாய்பாடு lines only
    சீர்_அடிகள் =  [ அடி.strip() for i,அடி in enumerate(பத்தி.strip().splitlines()) if i%2 ]

    அடிவரிசை = ஆசிரியப்பா.சீர்_வாய்ப்பாடு_கொடு(பாடல்)
    புது_சீர்_அடிகள் = ["= "+" ".join(அடி) for அடி in அடிவரிசை]

    assert சீர்_அடிகள் == புது_சீர்_அடிகள்