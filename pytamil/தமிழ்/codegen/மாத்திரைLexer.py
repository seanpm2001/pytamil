# Generated from /home/srix/workspace/pytamil-all/pytamil-3.10/pytamil/தமிழ்/resources/மாத்திரை.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,42,209,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,
        1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
        1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,
        1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,
        1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,1,21,1,22,1,22,
        1,22,1,23,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,26,1,26,1,26,
        1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,30,1,31,
        1,31,1,31,1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,
        1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,
        1,40,1,40,1,40,1,41,1,41,1,41,0,0,42,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
        81,41,83,42,1,0,0,208,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
        0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
        0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
        0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,
        0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,
        0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,
        0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,1,85,1,0,0,0,3,87,1,
        0,0,0,5,89,1,0,0,0,7,91,1,0,0,0,9,96,1,0,0,0,11,101,1,0,0,0,13,108,
        1,0,0,0,15,110,1,0,0,0,17,113,1,0,0,0,19,116,1,0,0,0,21,119,1,0,
        0,0,23,122,1,0,0,0,25,128,1,0,0,0,27,130,1,0,0,0,29,132,1,0,0,0,
        31,134,1,0,0,0,33,136,1,0,0,0,35,138,1,0,0,0,37,140,1,0,0,0,39,142,
        1,0,0,0,41,144,1,0,0,0,43,146,1,0,0,0,45,149,1,0,0,0,47,152,1,0,
        0,0,49,155,1,0,0,0,51,158,1,0,0,0,53,161,1,0,0,0,55,164,1,0,0,0,
        57,167,1,0,0,0,59,170,1,0,0,0,61,173,1,0,0,0,63,176,1,0,0,0,65,179,
        1,0,0,0,67,182,1,0,0,0,69,185,1,0,0,0,71,188,1,0,0,0,73,191,1,0,
        0,0,75,194,1,0,0,0,77,197,1,0,0,0,79,200,1,0,0,0,81,203,1,0,0,0,
        83,206,1,0,0,0,85,86,5,2953,0,0,86,2,1,0,0,0,87,88,5,2960,0,0,88,
        4,1,0,0,0,89,90,5,2964,0,0,90,6,1,0,0,0,91,92,5,2947,0,0,92,93,5,
        2993,0,0,93,94,5,3021,0,0,94,95,5,2951,0,0,95,8,1,0,0,0,96,97,5,
        2947,0,0,97,98,5,2975,0,0,98,99,5,3021,0,0,99,100,5,2952,0,0,100,
        10,1,0,0,0,101,102,5,2990,0,0,102,103,5,3021,0,0,103,104,5,2951,
        0,0,104,105,5,2991,0,0,105,106,5,3021,0,0,106,107,5,2950,0,0,107,
        12,1,0,0,0,108,109,5,2951,0,0,109,14,1,0,0,0,110,111,5,2991,0,0,
        111,112,5,3021,0,0,112,16,1,0,0,0,113,114,5,2979,0,0,114,115,5,3021,
        0,0,115,18,1,0,0,0,116,117,5,2990,0,0,117,118,5,3021,0,0,118,20,
        1,0,0,0,119,120,5,2985,0,0,120,121,5,3021,0,0,121,22,1,0,0,0,122,
        123,5,2990,0,0,123,124,5,3021,0,0,124,125,5,2997,0,0,125,126,5,3021,
        0,0,126,127,5,2949,0,0,127,24,1,0,0,0,128,129,5,2949,0,0,129,26,
        1,0,0,0,130,131,5,2958,0,0,131,28,1,0,0,0,132,133,5,2962,0,0,133,
        30,1,0,0,0,134,135,5,2950,0,0,135,32,1,0,0,0,136,137,5,2952,0,0,
        137,34,1,0,0,0,138,139,5,2954,0,0,139,36,1,0,0,0,140,141,5,2959,
        0,0,141,38,1,0,0,0,142,143,5,2963,0,0,143,40,1,0,0,0,144,145,5,2947,
        0,0,145,42,1,0,0,0,146,147,5,2965,0,0,147,148,5,3021,0,0,148,44,
        1,0,0,0,149,150,5,2970,0,0,150,151,5,3021,0,0,151,46,1,0,0,0,152,
        153,5,2975,0,0,153,154,5,3021,0,0,154,48,1,0,0,0,155,156,5,2980,
        0,0,156,157,5,3021,0,0,157,50,1,0,0,0,158,159,5,2986,0,0,159,160,
        5,3021,0,0,160,52,1,0,0,0,161,162,5,2993,0,0,162,163,5,3021,0,0,
        163,54,1,0,0,0,164,165,5,2974,0,0,165,166,5,3021,0,0,166,56,1,0,
        0,0,167,168,5,2969,0,0,168,169,5,3021,0,0,169,58,1,0,0,0,170,171,
        5,2984,0,0,171,172,5,3021,0,0,172,60,1,0,0,0,173,174,5,2992,0,0,
        174,175,5,3021,0,0,175,62,1,0,0,0,176,177,5,2994,0,0,177,178,5,3021,
        0,0,178,64,1,0,0,0,179,180,5,2997,0,0,180,181,5,3021,0,0,181,66,
        1,0,0,0,182,183,5,2996,0,0,183,184,5,3021,0,0,184,68,1,0,0,0,185,
        186,5,2995,0,0,186,187,5,3021,0,0,187,70,1,0,0,0,188,189,5,2950,
        0,0,189,190,5,2949,0,0,190,72,1,0,0,0,191,192,5,2952,0,0,192,193,
        5,2951,0,0,193,74,1,0,0,0,194,195,5,2954,0,0,195,196,5,2953,0,0,
        196,76,1,0,0,0,197,198,5,2959,0,0,198,199,5,2958,0,0,199,78,1,0,
        0,0,200,201,5,2960,0,0,201,202,5,2951,0,0,202,80,1,0,0,0,203,204,
        5,2963,0,0,204,205,5,2962,0,0,205,82,1,0,0,0,206,207,5,2964,0,0,
        207,208,5,2953,0,0,208,84,1,0,0,0,1,0,0
    ]

class மாத்திரைLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\u0B89'", "'\\u0B90'", "'\\u0B94'", "'\\u0B83\\u0BB1\\u0BCD\\u0B87'", 
            "'\\u0B83\\u0B9F\\u0BCD\\u0B88'", "'\\u0BAE\\u0BCD\\u0B87\\u0BAF\\u0BCD\\u0B86'", 
            "'\\u0B87'", "'\\u0BAF\\u0BCD'", "'\\u0BA3\\u0BCD'", "'\\u0BAE\\u0BCD'", 
            "'\\u0BA9\\u0BCD'", "'\\u0BAE\\u0BCD\\u0BB5\\u0BCD\\u0B85'", 
            "'\\u0B85'", "'\\u0B8E'", "'\\u0B92'", "'\\u0B86'", "'\\u0B88'", 
            "'\\u0B8A'", "'\\u0B8F'", "'\\u0B93'", "'\\u0B83'", "'\\u0B95\\u0BCD'", 
            "'\\u0B9A\\u0BCD'", "'\\u0B9F\\u0BCD'", "'\\u0BA4\\u0BCD'", 
            "'\\u0BAA\\u0BCD'", "'\\u0BB1\\u0BCD'", "'\\u0B9E\\u0BCD'", 
            "'\\u0B99\\u0BCD'", "'\\u0BA8\\u0BCD'", "'\\u0BB0\\u0BCD'", 
            "'\\u0BB2\\u0BCD'", "'\\u0BB5\\u0BCD'", "'\\u0BB4\\u0BCD'", 
            "'\\u0BB3\\u0BCD'", "'\\u0B86\\u0B85'", "'\\u0B88\\u0B87'", 
            "'\\u0B8A\\u0B89'", "'\\u0B8F\\u0B8E'", "'\\u0B90\\u0B87'", 
            "'\\u0B93\\u0B92'", "'\\u0B94\\u0B89'" ]

    symbolicNames = [ "<INVALID>",
 ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41" ]

    grammarFileName = "மாத்திரை.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


