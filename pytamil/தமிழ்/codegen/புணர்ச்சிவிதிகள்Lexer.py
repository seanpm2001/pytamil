# Generated from /home/srix/workspace/pytamil-all/pytamil-3.10/pytamil/தமிழ்/resources/புணர்ச்சிவிதிகள்.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,97,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,
        1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,6,
        1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,
        1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,
        10,1,11,1,11,1,11,1,12,1,12,0,0,13,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
        15,8,17,9,19,10,21,11,23,12,25,13,1,0,0,96,0,1,1,0,0,0,0,3,1,0,0,
        0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,
        0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,
        0,25,1,0,0,0,1,27,1,0,0,0,3,29,1,0,0,0,5,38,1,0,0,0,7,46,1,0,0,0,
        9,48,1,0,0,0,11,50,1,0,0,0,13,52,1,0,0,0,15,64,1,0,0,0,17,74,1,0,
        0,0,19,82,1,0,0,0,21,89,1,0,0,0,23,92,1,0,0,0,25,95,1,0,0,0,27,28,
        5,44,0,0,28,2,1,0,0,0,29,30,5,2984,0,0,30,31,5,3007,0,0,31,32,5,
        2994,0,0,32,33,5,3016,0,0,33,34,5,2990,0,0,34,35,5,3018,0,0,35,36,
        5,2996,0,0,36,37,5,3007,0,0,37,4,1,0,0,0,38,39,5,2997,0,0,39,40,
        5,2992,0,0,40,41,5,3009,0,0,41,42,5,2990,0,0,42,43,5,3018,0,0,43,
        44,5,2996,0,0,44,45,5,3007,0,0,45,6,1,0,0,0,46,47,5,124,0,0,47,8,
        1,0,0,0,48,49,5,40,0,0,49,10,1,0,0,0,50,51,5,41,0,0,51,12,1,0,0,
        0,52,53,5,2953,0,0,53,54,5,2975,0,0,54,55,5,2990,0,0,55,56,5,3021,
        0,0,56,57,5,2986,0,0,57,58,5,2975,0,0,58,59,5,3009,0,0,59,60,5,2990,
        0,0,60,61,5,3014,0,0,61,62,5,2991,0,0,62,63,5,3021,0,0,63,14,1,0,
        0,0,64,65,5,2951,0,0,65,66,5,2992,0,0,66,67,5,2975,0,0,67,68,5,3021,
        0,0,68,69,5,2975,0,0,69,70,5,3009,0,0,70,71,5,2980,0,0,71,72,5,2994,
        0,0,72,73,5,3021,0,0,73,16,1,0,0,0,74,75,5,2980,0,0,75,76,5,3007,
        0,0,76,77,5,2992,0,0,77,78,5,3007,0,0,78,79,5,2980,0,0,79,80,5,2994,
        0,0,80,81,5,3021,0,0,81,18,1,0,0,0,82,83,5,2970,0,0,83,84,5,3009,
        0,0,84,85,5,2990,0,0,85,86,5,3021,0,0,86,87,5,2990,0,0,87,88,5,3006,
        0,0,88,20,1,0,0,0,89,90,5,2997,0,0,90,91,5,3021,0,0,91,22,1,0,0,
        0,92,93,5,2991,0,0,93,94,5,3021,0,0,94,24,1,0,0,0,95,96,5,43,0,0,
        96,26,1,0,0,0,1,0,0
    ]

class புணர்ச்சிவிதிகள்Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "','", "'\\u0BA8\\u0BBF\\u0BB2\\u0BC8\\u0BAE\\u0BCA\\u0BB4\\u0BBF'", 
            "'\\u0BB5\\u0BB0\\u0BC1\\u0BAE\\u0BCA\\u0BB4\\u0BBF'", "'|'", 
            "'('", "')'", "'\\u0B89\\u0B9F\\u0BAE\\u0BCD\\u0BAA\\u0B9F\\u0BC1\\u0BAE\\u0BC6\\u0BAF\\u0BCD'", 
            "'\\u0B87\\u0BB0\\u0B9F\\u0BCD\\u0B9F\\u0BC1\\u0BA4\\u0BB2\\u0BCD'", 
            "'\\u0BA4\\u0BBF\\u0BB0\\u0BBF\\u0BA4\\u0BB2\\u0BCD'", "'\\u0B9A\\u0BC1\\u0BAE\\u0BCD\\u0BAE\\u0BBE'", 
            "'\\u0BB5\\u0BCD'", "'\\u0BAF\\u0BCD'", "'+'" ]

    symbolicNames = [ "<INVALID>",
 ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12" ]

    grammarFileName = "புணர்ச்சிவிதிகள்.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


